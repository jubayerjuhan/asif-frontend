{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport var setProductPriceFilter = function setProductPriceFilter(price) {\n  return {\n    type: actionTypes.SET_PRODUCT_PRICE_FILTER,\n    price: price\n  };\n};\nexport var addToCart = function addToCart(productDetails) {\n  return {\n    type: actionTypes.ADD_TO_CART,\n    productDetails: productDetails\n  };\n};\nexport var removeFromCart = function removeFromCart(productDetails) {\n  return {\n    type: actionTypes.REMOVE_FROM_CART,\n    productDetails: productDetails\n  };\n};\nexport var clearCart = function clearCart() {\n  return {\n    type: actionTypes.CLEAR_CART\n  };\n};\nexport var updateCartProductCount = function updateCartProductCount(value, productDetails) {\n  return {\n    type: actionTypes.UPDATE_CART_PRODUCT_COUNT,\n    newCountValue: value,\n    productDetails: productDetails\n  };\n};\nexport var confirmOrder = function confirmOrder(order, ownProps) {\n  return function (dispatch) {\n    // send order object to an end point of choice\n    console.log(order); // todo\n    //token to be used with stripe\n\n    dispatch(confirmOrderSuccess());\n    ownProps.history.push(\"/cart\");\n    setTimeout(function () {\n      dispatch(resetOrderSuccess());\n    }, 5000);\n  };\n};\nexport var closeMaxProductModal = function closeMaxProductModal() {\n  return {\n    type: actionTypes.CLOSE_MAX_PRODUCT_MODAL\n  };\n};\nexport var confirmOrderSuccess = function confirmOrderSuccess() {\n  return {\n    type: actionTypes.CONFIRM_ORDER_SUCCESS\n  };\n};\nexport var resetOrderSuccess = function resetOrderSuccess() {\n  return {\n    type: actionTypes.RESET_ORDER_SUCCESS\n  };\n};\nexport var confirmOrderFailure = function confirmOrderFailure() {\n  // todo\n  return {\n    type: actionTypes.CONFIRM_ORDER_FAILURE\n  };\n};\nexport var toogleSideBar = function toogleSideBar() {\n  return {\n    type: actionTypes.TOGGLE_SIDE_BAR\n  };\n};\nexport var setPromoCode = function setPromoCode(promoCodeObject) {\n  return {\n    type: actionTypes.SET_PROMO_CODE,\n    promoCode: promoCodeObject\n  };\n};\nexport var changeCurrency = function changeCurrency(currencyName) {\n  // currency value can be fetched here from an external api and then passes to the store\n  return {\n    type: actionTypes.CHANGE_CURRENCY,\n    currencyName: currencyName\n  };\n};\nexport var toogleItemInWishList = function toogleItemInWishList(productId) {\n  return {\n    type: actionTypes.TOOLE_ITEM_IN_WISHLIST,\n    productId: productId\n  };\n};","map":{"version":3,"names":["actionTypes","setProductPriceFilter","price","type","SET_PRODUCT_PRICE_FILTER","addToCart","productDetails","ADD_TO_CART","removeFromCart","REMOVE_FROM_CART","clearCart","CLEAR_CART","updateCartProductCount","value","UPDATE_CART_PRODUCT_COUNT","newCountValue","confirmOrder","order","ownProps","dispatch","console","log","confirmOrderSuccess","history","push","setTimeout","resetOrderSuccess","closeMaxProductModal","CLOSE_MAX_PRODUCT_MODAL","CONFIRM_ORDER_SUCCESS","RESET_ORDER_SUCCESS","confirmOrderFailure","CONFIRM_ORDER_FAILURE","toogleSideBar","TOGGLE_SIDE_BAR","setPromoCode","promoCodeObject","SET_PROMO_CODE","promoCode","changeCurrency","currencyName","CHANGE_CURRENCY","toogleItemInWishList","productId","TOOLE_ITEM_IN_WISHLIST"],"sources":["I:/Node-Express/juhan/src/store/actions/index.js"],"sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setProductPriceFilter = (price) => {\r\n  return { type: actionTypes.SET_PRODUCT_PRICE_FILTER, price: price };\r\n};\r\n\r\nexport const addToCart = (productDetails) => {\r\n  return {\r\n    type: actionTypes.ADD_TO_CART,\r\n    productDetails: productDetails,\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (productDetails) => {\r\n  return {\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    productDetails: productDetails,\r\n  };\r\n};\r\n\r\nexport const clearCart = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_CART,\r\n  };\r\n};\r\n\r\nexport const updateCartProductCount = (value, productDetails) => {\r\n  return {\r\n    type: actionTypes.UPDATE_CART_PRODUCT_COUNT,\r\n    newCountValue: value,\r\n    productDetails: productDetails,\r\n  };\r\n};\r\n\r\nexport const confirmOrder = (order, ownProps) => {\r\n  return (dispatch) => {\r\n    // send order object to an end point of choice\r\n       console.log(order);\r\n      \r\n    // todo\r\n\r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    //token to be used with stripe\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    \r\n    dispatch(confirmOrderSuccess());\r\n    ownProps.history.push(\"/cart\");\r\n    setTimeout(() => {\r\n      dispatch(resetOrderSuccess());\r\n    }, 5000);\r\n  };\r\n};\r\n\r\nexport const closeMaxProductModal = () => {\r\n  return {\r\n    type: actionTypes.CLOSE_MAX_PRODUCT_MODAL,\r\n  };\r\n};\r\n\r\nexport const confirmOrderSuccess = () => {\r\n  return {\r\n    type: actionTypes.CONFIRM_ORDER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const resetOrderSuccess = () => {\r\n  return {\r\n    type: actionTypes.RESET_ORDER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const confirmOrderFailure = () => {\r\n  // todo\r\n  return {\r\n    type: actionTypes.CONFIRM_ORDER_FAILURE,\r\n  };\r\n};\r\n\r\nexport const toogleSideBar = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_SIDE_BAR,\r\n  };\r\n};\r\n\r\nexport const setPromoCode = (promoCodeObject) => {\r\n  return {\r\n    type: actionTypes.SET_PROMO_CODE,\r\n    promoCode: promoCodeObject,\r\n  };\r\n};\r\n\r\nexport const changeCurrency = (currencyName) => {\r\n  // currency value can be fetched here from an external api and then passes to the store\r\n  return {\r\n    type: actionTypes.CHANGE_CURRENCY,\r\n    currencyName: currencyName,\r\n  };\r\n};\r\n\r\nexport const toogleItemInWishList = (productId) => {\r\n  return {\r\n    type: actionTypes.TOOLE_ITEM_IN_WISHLIST,\r\n    productId: productId,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}