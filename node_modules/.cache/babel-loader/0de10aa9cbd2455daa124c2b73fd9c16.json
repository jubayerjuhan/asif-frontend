{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"I:\\\\Node-Express\\\\juhan\\\\src\\\\components\\\\UI\\\\BreadCrumbs\\\\BreadCrumbs.jsx\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\nvar BreadCrumbs = function BreadCrumbs(props) {\n  var links = props.breadCrumbLinks;\n\n  function generateBreadCrumb() {\n    var _this2 = this;\n\n    var crumbs = [];\n\n    if (links.length) {\n      links.forEach(function (link, index) {\n        if (index === links.length - 1) {\n          crumbs.push( /*#__PURE__*/React.createElement(\"li\", {\n            className: \"breadcrumb-item active\",\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 13\n            }\n          }, link.label));\n        } else {\n          crumbs.push( /*#__PURE__*/React.createElement(\"li\", {\n            className: \"breadcrumb-item\",\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(NavLink, {\n            to: link.to,\n            exact: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }\n          }, link.label)));\n        }\n      });\n    }\n\n    return crumbs;\n  }\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    exact: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Home\")), generateBreadCrumb()));\n};\n\nBreadCrumbs.prototypes = {\n  breadCrumbLinks: PropTypes.array\n};\nexport default BreadCrumbs;","map":{"version":3,"names":["React","PropTypes","NavLink","BreadCrumbs","props","links","breadCrumbLinks","generateBreadCrumb","crumbs","length","forEach","link","index","push","label","to","prototypes","array"],"sources":["I:/Node-Express/juhan/src/components/UI/BreadCrumbs/BreadCrumbs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst BreadCrumbs = (props) => {\r\n  let links = props.breadCrumbLinks;\r\n\r\n  function generateBreadCrumb() {\r\n    let crumbs = [];\r\n    if (links.length) {\r\n      links.forEach((link, index) => {\r\n        if (index === links.length - 1) {\r\n          crumbs.push(\r\n            <li className=\"breadcrumb-item active\" key={index}>\r\n              {link.label}\r\n            </li>\r\n          );\r\n        } else {\r\n          crumbs.push(\r\n            <li className=\"breadcrumb-item\" key={index}>\r\n              <NavLink to={link.to} exact>\r\n                {link.label}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        }\r\n      });\r\n    }\r\n    return crumbs;\r\n  }\r\n\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"breadcrumb-item\">\r\n          <NavLink to={\"/\"} exact>\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {generateBreadCrumb()}\r\n      </ol>\r\n    </nav>\r\n  );\r\n};\r\n\r\nBreadCrumbs.prototypes = {\r\n  breadCrumbLinks: PropTypes.array,\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;EAC7B,IAAIC,KAAK,GAAGD,KAAK,CAACE,eAAlB;;EAEA,SAASC,kBAAT,GAA8B;IAAA;;IAC5B,IAAIC,MAAM,GAAG,EAAb;;IACA,IAAIH,KAAK,CAACI,MAAV,EAAkB;MAChBJ,KAAK,CAACK,OAAN,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;QAC7B,IAAIA,KAAK,KAAKP,KAAK,CAACI,MAAN,GAAe,CAA7B,EAAgC;UAC9BD,MAAM,CAACK,IAAP,eACE;YAAI,SAAS,EAAC,wBAAd;YAAuC,GAAG,EAAED,KAA5C;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACGD,IAAI,CAACG,KADR,CADF;QAKD,CAND,MAMO;UACLN,MAAM,CAACK,IAAP,eACE;YAAI,SAAS,EAAC,iBAAd;YAAgC,GAAG,EAAED,KAArC;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,gBACE,oBAAC,OAAD;YAAS,EAAE,EAAED,IAAI,CAACI,EAAlB;YAAsB,KAAK,MAA3B;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACGJ,IAAI,CAACG,KADR,CADF,CADF;QAOD;MACF,CAhBD;IAiBD;;IACD,OAAON,MAAP;EACD;;EAED,oBACE;IAAK,cAAW,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,YAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,iBAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,EAAE,EAAE,GAAb;IAAkB,KAAK,MAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UADF,CADF,EAMGD,kBAAkB,EANrB,CADF,CADF;AAYD,CAvCD;;AAyCAJ,WAAW,CAACa,UAAZ,GAAyB;EACvBV,eAAe,EAAEL,SAAS,CAACgB;AADJ,CAAzB;AAIA,eAAed,WAAf"},"metadata":{},"sourceType":"module"}