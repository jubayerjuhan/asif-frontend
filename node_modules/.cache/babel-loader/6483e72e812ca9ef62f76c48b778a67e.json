{"ast":null,"code":"import _objectSpread from \"I:\\\\Node-Express\\\\juhan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"I:\\\\Node-Express\\\\juhan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"I:\\\\Node-Express\\\\juhan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"I:\\\\Node-Express\\\\juhan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"I:\\\\Node-Express\\\\juhan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"I:\\\\Node-Express\\\\juhan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"I:\\\\Node-Express\\\\juhan\\\\src\\\\views\\\\Checkout.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { confirmOrder, setPromoCode } from \"../store/actions\";\nimport CheckoutCartProduct from \"../components/Checkout/CheckoutCartProduct\";\nimport PromoCodeForm from \"../components/Checkout/PromoCodeForm\";\nimport PromoCodeValue from \"../components/Checkout/PromoCodeValue\";\nimport CheckoutCartTotals from \"../components/Checkout/CheckoutCartTotals\";\nimport CustomerInputs from \"../components/Checkout/Forms/CustomerInputs\";\nimport DeliveryOptions from \"../components/Checkout/Forms/DeliveryOptions\";\nimport PaymentOptions from \"../components/Checkout/Forms/Payments/PaymentOptions\";\nimport Alert from \"../components/UI/Alert/Alert\";\nimport PropTypes from \"prop-types\";\nimport formValidator from \"../Utility/formValidation\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport { currencyToUse } from \"../Utility/currency\";\nimport axios from \"axios\";\nimport { client } from \"../client.js\";\n\nvar Checkout = /*#__PURE__*/function (_Component) {\n  _inherits(Checkout, _Component);\n\n  function Checkout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      promoCode: \"\",\n      showAlert: false,\n      alertType: \"\",\n      alertMessage: \"\",\n      paymentMethod: \"creditCard\",\n      shippingPrice: 300,\n      usedDeliveryOption: 1,\n      makeOrder: false,\n      correctCardInfo: false,\n      customerInfo: {\n        firstName: {\n          value: \"\",\n          valid: false,\n          touched: false,\n          errorsMsg: \"\"\n        },\n        secondName: {\n          value: \"\",\n          valid: false,\n          touched: false,\n          errorsMsg: \"\"\n        },\n        email: {\n          value: \"\",\n          valid: false,\n          touched: false,\n          errorsMsg: \"\"\n        }\n      }\n    };\n\n    _this.customerInfoChangeHandler = function (event, identifier) {\n      // use deep cloning to be able to get the values of nested objects\n      var customerInfo = _objectSpread({}, _this.state.customerInfo);\n\n      var customerInfoField = _objectSpread({}, customerInfo[identifier]);\n\n      customerInfoField.value = event.target.value;\n      var validationResults = formValidator(identifier, customerInfoField.value);\n      customerInfoField.valid = validationResults.isValid;\n      customerInfoField.errorsMsg = validationResults.errorsMsg;\n      customerInfoField.touched = true;\n      customerInfo[identifier] = customerInfoField;\n      var makeOrder = true;\n\n      for (var _identifier in customerInfo) {\n        makeOrder = customerInfo[_identifier].valid && makeOrder;\n      }\n\n      _this.setState({\n        customerInfo: customerInfo,\n        makeOrder: makeOrder\n      });\n    };\n\n    _this.promoCodeChangeHandler = function (event) {\n      _this.setState({\n        promoCode: event.target.value\n      });\n    };\n\n    _this.paymentOptionChangeHandler = function (event) {\n      if (event.target.value === \"creditCard\") {\n        _this.setState({\n          correctCardInfo: false\n        });\n      } else {\n        _this.setState({\n          correctCardInfo: true\n        });\n      }\n\n      _this.setState({\n        paymentMethod: event.target.value\n      });\n    };\n\n    _this.confirmOrderHandler = function (event, total) {\n      event.preventDefault();\n      var order = {};\n      order[\"cart\"] = _this.props.cartProductsProps;\n      order[\"user\"] = {\n        firstName: _this.state.customerInfo.firstName.value,\n        secondName: _this.state.customerInfo.secondName.value,\n        email: _this.state.customerInfo.email.value\n      };\n      order[\"usedPromoCode\"] = _this.state.promoCode;\n      order[\"currency\"] = _this.props.usedCurrencyProp;\n      order[\"paymentMethod\"] = _this.state.paymentMethod;\n      order[\"deliveryOption\"] = _this.state.usedDeliveryOption;\n      order[\"total\"] = total; // todo\n      //         create a stripe token ..\n\n      console.log(_this.state, total);\n      client.post(\"/insert-order\", order).then(function (res) {\n        console.log(res);\n\n        _this.props.confirmOrderProp(order);\n      });\n    };\n\n    _this.setPromoCode = function (event) {\n      event.preventDefault(); // check promo code in state\n\n      var getPromoCode = _this.props.promoCodeProp.filter(function (codeName) {\n        return codeName.code === _this.state.promoCode;\n      });\n\n      if (getPromoCode.length > 0) {\n        _this.props.setPromoCodeProp(getPromoCode[0]);\n\n        _this.setState({\n          showAlert: true,\n          alertType: \"alert-success\",\n          alertMessage: \"The promo code you entered has given you a \".concat(getPromoCode[0].percentage, \"% discount on the total price.\")\n        });\n      } else {\n        _this.setState({\n          showAlert: true,\n          alertType: \"alert alert-danger\",\n          alertMessage: \"The Promo code you entered does not have discounts\"\n        });\n      }\n    };\n\n    _this.closeAlertHandler = function () {\n      _this.setState({\n        showAlert: !_this.state.showAlert,\n        alertType: \"\",\n        alertMessage: \"\"\n      });\n    };\n\n    _this.deliveryOptionChangeHandler = function (event) {\n      //get used delivery option from the state\n      var deliveryOption = _this.props.deliveryOptions.find(function (option) {\n        return option.id === parseInt(event.target.value);\n      });\n\n      if (deliveryOption) {\n        _this.setState({\n          usedDeliveryOption: parseInt(event.target.value),\n          shippingPrice: deliveryOption.cost\n        });\n      }\n    };\n\n    _this.creditCardHandler = function (element) {\n      if (element.complete) {\n        _this.setState({\n          correctCardInfo: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkout, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productsPrices = [];\n      var chosenPaymentMethod = null;\n      var currencyKeys = currencyToUse(this.props.usedCurrencyProp);\n      var currencyValue = currencyKeys.value;\n      var cartProducts = this.props.cartProductsProps.map(function (cartProduct, index) {\n        // fetch product information from source based on id\n        var productFromStore = _this2.props.productsProps.find(function (product) {\n          return product.id === cartProduct.id;\n        });\n\n        productsPrices.push({\n          price: productFromStore.quantity > 0 ? Math.round(productFromStore.price * currencyValue) : 0,\n          count: cartProduct.quantity\n        });\n        return /*#__PURE__*/React.createElement(CheckoutCartProduct, {\n          key: index,\n          checkoutProductName: productFromStore.name,\n          checkoutProductCategory: productFromStore.category,\n          checkoutProductPrice: Math.round(productFromStore.price * currencyValue),\n          checkoutProductImage: productFromStore.img,\n          checkoutCartCount: cartProduct.quantity,\n          checkoutCartSize: cartProduct.size,\n          currency: _this2.props.usedCurrencyProp,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        });\n      });\n      var shippingPrice = this.state.shippingPrice ? Math.round(this.state.shippingPrice * currencyValue) : 0;\n      var productTotals = productsPrices.reduce(function (acc, el) {\n        return acc + el.price * el.count;\n      }, 0);\n      var vatPercentage = this.props.vatProps > 0 ? this.props.vatProps / 100 : 0;\n      var vat = productTotals > 0 ? Math.round(productTotals * vatPercentage) : 0;\n      var percentageDiscount = this.props.usedPromoCodeProp ? this.props.usedPromoCodeProp.percentage / 100 : 0;\n      var discountAmount = productTotals * percentageDiscount;\n      var shoppingTotal = productTotals > 0 ? productTotals + vat + shippingPrice - discountAmount : 0;\n\n      if (this.state.paymentMethod === \"creditCard\") {\n        chosenPaymentMethod = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-4 p-3 shop-card-field\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(CardElement, {\n          onChange: function onChange(element) {\n            return _this2.creditCardHandler(element);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }\n        }));\n      } else if (this.state.paymentMethod === \"onDelivery\") {\n        chosenPaymentMethod = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-4 p-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 9\n          }\n        }, \"You will pay when the product is delivered to you.\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container py-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }\n      }, this.props.cartTotalProps <= 0 ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 43\n        }\n      }) : null, this.state.showAlert ? /*#__PURE__*/React.createElement(Alert, {\n        alertType: this.state.alertType,\n        closeAlert: this.closeAlertHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, this.state.alertMessage) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 order-md-2 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }, \"Order Review\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-secondary badge-pill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, this.props.cartTotalProps)), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-group mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, cartProducts, this.props.usedPromoCodeProp ? /*#__PURE__*/React.createElement(PromoCodeValue, {\n        currency: this.props.usedCurrencyProp,\n        usedPromoCode: this.props.usedPromoCodeProp,\n        discountAmount: discountAmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }) : null, /*#__PURE__*/React.createElement(CheckoutCartTotals, {\n        productTotals: productTotals,\n        vat: vat,\n        shippingPrice: shippingPrice,\n        shoppingTotal: shoppingTotal,\n        currency: this.props.usedCurrencyProp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(PromoCodeForm, {\n        setPromoCode: this.setPromoCode,\n        promoCodeChangeHandler: function promoCodeChangeHandler(event) {\n          return _this2.promoCodeChangeHandler(event);\n        },\n        promoCode: this.state.promoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-8 order-md-1 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, \"Billing Information\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"shop-form shop-bg-white p-3\",\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomerInputs, {\n        customerInfo: this.state.customerInfo,\n        inputChanged: function inputChanged(event, identifier) {\n          return _this2.customerInfoChangeHandler(event, identifier);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, \"Delivery Options\"), /*#__PURE__*/React.createElement(DeliveryOptions, {\n        currency: this.props.usedCurrencyProp,\n        deliveryOptions: this.props.deliveryOptions,\n        usedDeliveryOption: this.state.usedDeliveryOption,\n        deliveryOptionChanged: this.deliveryOptionChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }\n      }, \"Payment Method\"), /*#__PURE__*/React.createElement(PaymentOptions, {\n        paymentMethod: this.state.paymentMethod,\n        paymentOptionChanged: this.paymentOptionChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }\n      }, chosenPaymentMethod), /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: !(this.state.makeOrder && this.state.correctCardInfo),\n        className: \"btn shop-btn-secondary btn-lg btn-block\",\n        onClick: function onClick(event) {\n          return _this2.confirmOrderHandler(event, shoppingTotal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, \"Confirm Order\")))));\n    }\n  }]);\n\n  return Checkout;\n}(Component);\n\nCheckout.propTypes = {\n  productsProps: PropTypes.array.isRequired,\n  cartProductsProps: PropTypes.array.isRequired,\n  cartTotalProps: PropTypes.number.isRequired,\n  promoCodeProp: PropTypes.array,\n  usedPromoCodeProp: PropTypes.object,\n  deliveryOptions: PropTypes.array.isRequired,\n  usedCurrencyProp: PropTypes.object.isRequired,\n  vatProps: PropTypes.number\n};\nCheckout.defaultProps = {\n  shippingPriceProp: 0\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    productsProps: state.products,\n    cartProductsProps: state.cart,\n    cartTotalProps: state.cartTotal,\n    vatProps: state.vat,\n    promoCodeProp: state.promoCode,\n    usedPromoCodeProp: state.usedPromoCode,\n    deliveryOptions: state.deliveryOptions,\n    usedCurrencyProp: state.usedCurrency\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    confirmOrderProp: function confirmOrderProp(order) {\n      return dispatch(confirmOrder(order, ownProps));\n    },\n    setPromoCodeProp: function setPromoCodeProp(promoCode, percentage) {\n      return dispatch(setPromoCode(promoCode, percentage));\n    }\n  };\n}; // inject stripe prop into the component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectStripe(Checkout));","map":{"version":3,"names":["React","Component","Redirect","connect","confirmOrder","setPromoCode","CheckoutCartProduct","PromoCodeForm","PromoCodeValue","CheckoutCartTotals","CustomerInputs","DeliveryOptions","PaymentOptions","Alert","PropTypes","formValidator","CardElement","injectStripe","currencyToUse","axios","client","Checkout","state","promoCode","showAlert","alertType","alertMessage","paymentMethod","shippingPrice","usedDeliveryOption","makeOrder","correctCardInfo","customerInfo","firstName","value","valid","touched","errorsMsg","secondName","email","customerInfoChangeHandler","event","identifier","customerInfoField","target","validationResults","isValid","setState","promoCodeChangeHandler","paymentOptionChangeHandler","confirmOrderHandler","total","preventDefault","order","props","cartProductsProps","usedCurrencyProp","console","log","post","then","res","confirmOrderProp","getPromoCode","promoCodeProp","filter","codeName","code","length","setPromoCodeProp","percentage","closeAlertHandler","deliveryOptionChangeHandler","deliveryOption","deliveryOptions","find","option","id","parseInt","cost","creditCardHandler","element","complete","productsPrices","chosenPaymentMethod","currencyKeys","currencyValue","cartProducts","map","cartProduct","index","productFromStore","productsProps","product","push","price","quantity","Math","round","count","name","category","img","size","productTotals","reduce","acc","el","vatPercentage","vatProps","vat","percentageDiscount","usedPromoCodeProp","discountAmount","shoppingTotal","cartTotalProps","propTypes","array","isRequired","number","object","defaultProps","shippingPriceProp","mapStateToProps","products","cart","cartTotal","usedPromoCode","usedCurrency","mapDispatchToProps","dispatch","ownProps"],"sources":["I:/Node-Express/juhan/src/views/Checkout.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { confirmOrder, setPromoCode } from \"../store/actions\";\r\nimport CheckoutCartProduct from \"../components/Checkout/CheckoutCartProduct\";\r\nimport PromoCodeForm from \"../components/Checkout/PromoCodeForm\";\r\nimport PromoCodeValue from \"../components/Checkout/PromoCodeValue\";\r\nimport CheckoutCartTotals from \"../components/Checkout/CheckoutCartTotals\";\r\nimport CustomerInputs from \"../components/Checkout/Forms/CustomerInputs\";\r\nimport DeliveryOptions from \"../components/Checkout/Forms/DeliveryOptions\";\r\nimport PaymentOptions from \"../components/Checkout/Forms/Payments/PaymentOptions\";\r\nimport Alert from \"../components/UI/Alert/Alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport formValidator from \"../Utility/formValidation\";\r\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\r\nimport { currencyToUse } from \"../Utility/currency\";\r\nimport axios from \"axios\";\r\nimport { client } from \"../client.js\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    promoCode: \"\",\r\n    showAlert: false,\r\n    alertType: \"\",\r\n    alertMessage: \"\",\r\n    paymentMethod: \"creditCard\",\r\n    shippingPrice: 300,\r\n    usedDeliveryOption: 1,\r\n    makeOrder: false,\r\n    correctCardInfo: false,\r\n    customerInfo: {\r\n      firstName: {\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        errorsMsg: \"\",\r\n      },\r\n      secondName: {\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        errorsMsg: \"\",\r\n      },\r\n      email: {\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        errorsMsg: \"\",\r\n      },\r\n    },\r\n  };\r\n\r\n  customerInfoChangeHandler = (event, identifier) => {\r\n    // use deep cloning to be able to get the values of nested objects\r\n    const customerInfo = { ...this.state.customerInfo };\r\n    const customerInfoField = { ...customerInfo[identifier] };\r\n    customerInfoField.value = event.target.value;\r\n    const validationResults = formValidator(\r\n      identifier,\r\n      customerInfoField.value\r\n    );\r\n    customerInfoField.valid = validationResults.isValid;\r\n    customerInfoField.errorsMsg = validationResults.errorsMsg;\r\n    customerInfoField.touched = true;\r\n    customerInfo[identifier] = customerInfoField;\r\n\r\n    let makeOrder = true;\r\n    for (let identifier in customerInfo) {\r\n      makeOrder = customerInfo[identifier].valid && makeOrder;\r\n    }\r\n    this.setState({ customerInfo: customerInfo, makeOrder: makeOrder });\r\n  };\r\n\r\n  promoCodeChangeHandler = (event) => {\r\n    this.setState({ promoCode: event.target.value });\r\n  };\r\n\r\n  paymentOptionChangeHandler = (event) => {\r\n    if (event.target.value === \"creditCard\") {\r\n      this.setState({ correctCardInfo: false });\r\n    } else {\r\n      this.setState({ correctCardInfo: true });\r\n    }\r\n    this.setState({ paymentMethod: event.target.value });\r\n  };\r\n\r\n  confirmOrderHandler = (event, total) => {\r\n    event.preventDefault();\r\n    let order = {};\r\n    order[\"cart\"] = this.props.cartProductsProps;\r\n    order[\"user\"] = {\r\n      firstName: this.state.customerInfo.firstName.value,\r\n      secondName: this.state.customerInfo.secondName.value,\r\n      email: this.state.customerInfo.email.value,\r\n    };\r\n    order[\"usedPromoCode\"] = this.state.promoCode;\r\n    order[\"currency\"] = this.props.usedCurrencyProp;\r\n    order[\"paymentMethod\"] = this.state.paymentMethod;\r\n    order[\"deliveryOption\"] = this.state.usedDeliveryOption;\r\n    order[\"total\"] = total;\r\n\r\n    // todo\r\n\r\n    //         create a stripe token ..\r\n    console.log(this.state, total);\r\n\r\n    client.post(\"/insert-order\", order).then((res) => {\r\n      console.log(res);\r\n      this.props.confirmOrderProp(order);\r\n    });\r\n  };\r\n\r\n  setPromoCode = (event) => {\r\n    event.preventDefault();\r\n    // check promo code in state\r\n    let getPromoCode = this.props.promoCodeProp.filter(\r\n      (codeName) => codeName.code === this.state.promoCode\r\n    );\r\n\r\n    if (getPromoCode.length > 0) {\r\n      this.props.setPromoCodeProp(getPromoCode[0]);\r\n      this.setState({\r\n        showAlert: true,\r\n        alertType: \"alert-success\",\r\n        alertMessage: `The promo code you entered has given you a ${getPromoCode[0].percentage}% discount on the total price.`,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAlert: true,\r\n        alertType: \"alert alert-danger\",\r\n        alertMessage: \"The Promo code you entered does not have discounts\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closeAlertHandler = () => {\r\n    this.setState({\r\n      showAlert: !this.state.showAlert,\r\n      alertType: \"\",\r\n      alertMessage: \"\",\r\n    });\r\n  };\r\n\r\n  deliveryOptionChangeHandler = (event) => {\r\n    //get used delivery option from the state\r\n    let deliveryOption = this.props.deliveryOptions.find(\r\n      (option) => option.id === parseInt(event.target.value)\r\n    );\r\n    if (deliveryOption) {\r\n      this.setState({\r\n        usedDeliveryOption: parseInt(event.target.value),\r\n        shippingPrice: deliveryOption.cost,\r\n      });\r\n    }\r\n  };\r\n\r\n  creditCardHandler = (element) => {\r\n    if (element.complete) {\r\n      this.setState({ correctCardInfo: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let productsPrices = [];\r\n    let chosenPaymentMethod = null;\r\n    let currencyKeys = currencyToUse(this.props.usedCurrencyProp);\r\n    let currencyValue = currencyKeys.value;\r\n\r\n    const cartProducts = this.props.cartProductsProps.map(\r\n      (cartProduct, index) => {\r\n        // fetch product information from source based on id\r\n        let productFromStore = this.props.productsProps.find(\r\n          (product) => product.id === cartProduct.id\r\n        );\r\n        productsPrices.push({\r\n          price:\r\n            productFromStore.quantity > 0\r\n              ? Math.round(productFromStore.price * currencyValue)\r\n              : 0,\r\n          count: cartProduct.quantity,\r\n        });\r\n        return (\r\n          <CheckoutCartProduct\r\n            key={index}\r\n            checkoutProductName={productFromStore.name}\r\n            checkoutProductCategory={productFromStore.category}\r\n            checkoutProductPrice={Math.round(\r\n              productFromStore.price * currencyValue\r\n            )}\r\n            checkoutProductImage={productFromStore.img}\r\n            checkoutCartCount={cartProduct.quantity}\r\n            checkoutCartSize={cartProduct.size}\r\n            currency={this.props.usedCurrencyProp}\r\n          />\r\n        );\r\n      }\r\n    );\r\n\r\n    let shippingPrice = this.state.shippingPrice\r\n      ? Math.round(this.state.shippingPrice * currencyValue)\r\n      : 0;\r\n    let productTotals = productsPrices.reduce(\r\n      (acc, el) => acc + el.price * el.count,\r\n      0\r\n    );\r\n    let vatPercentage = this.props.vatProps > 0 ? this.props.vatProps / 100 : 0;\r\n    let vat = productTotals > 0 ? Math.round(productTotals * vatPercentage) : 0;\r\n    let percentageDiscount = this.props.usedPromoCodeProp\r\n      ? this.props.usedPromoCodeProp.percentage / 100\r\n      : 0;\r\n    let discountAmount = productTotals * percentageDiscount;\r\n    let shoppingTotal =\r\n      productTotals > 0\r\n        ? productTotals + vat + shippingPrice - discountAmount\r\n        : 0;\r\n\r\n    if (this.state.paymentMethod === \"creditCard\") {\r\n      chosenPaymentMethod = (\r\n        <div className={\"ml-4 p-3 shop-card-field\"}>\r\n          <CardElement\r\n            onChange={(element) => this.creditCardHandler(element)}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.paymentMethod === \"onDelivery\") {\r\n      chosenPaymentMethod = (\r\n        <div className={\"ml-4 p-3\"}>\r\n          You will pay when the product is delivered to you.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container py-4\">\r\n        {this.props.cartTotalProps <= 0 ? <Redirect to=\"/cart\" /> : null}\r\n\r\n        {this.state.showAlert ? (\r\n          <Alert\r\n            alertType={this.state.alertType}\r\n            closeAlert={this.closeAlertHandler}\r\n          >\r\n            {this.state.alertMessage}\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 order-md-2 mb-4\">\r\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <span className=\"text-muted\">Order Review</span>\r\n              <span className=\"badge badge-secondary badge-pill\">\r\n                {this.props.cartTotalProps}\r\n              </span>\r\n            </h4>\r\n\r\n            <ul className=\"list-group mb-3\">\r\n              {/* items in cart */}\r\n              {cartProducts}\r\n\r\n              {/* used promo codes */}\r\n              {this.props.usedPromoCodeProp ? (\r\n                <PromoCodeValue\r\n                  currency={this.props.usedCurrencyProp}\r\n                  usedPromoCode={this.props.usedPromoCodeProp}\r\n                  discountAmount={discountAmount}\r\n                />\r\n              ) : null}\r\n\r\n              {/* checkout totals */}\r\n              <CheckoutCartTotals\r\n                productTotals={productTotals}\r\n                vat={vat}\r\n                shippingPrice={shippingPrice}\r\n                shoppingTotal={shoppingTotal}\r\n                currency={this.props.usedCurrencyProp}\r\n              />\r\n            </ul>\r\n\r\n            {/*promo code form */}\r\n            <PromoCodeForm\r\n              setPromoCode={this.setPromoCode}\r\n              promoCodeChangeHandler={(event) =>\r\n                this.promoCodeChangeHandler(event)\r\n              }\r\n              promoCode={this.state.promoCode}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8 order-md-1 \">\r\n            <h4 className=\"mb-3\">Billing Information</h4>\r\n            <form className=\"shop-form shop-bg-white p-3\" noValidate>\r\n              {/* customer details form fields */}\r\n              <CustomerInputs\r\n                customerInfo={this.state.customerInfo}\r\n                inputChanged={(event, identifier) =>\r\n                  this.customerInfoChangeHandler(event, identifier)\r\n                }\r\n              />\r\n              {/* delivery options selection fields */}\r\n              <h4 className=\"\">Delivery Options</h4>\r\n              <DeliveryOptions\r\n                currency={this.props.usedCurrencyProp}\r\n                deliveryOptions={this.props.deliveryOptions}\r\n                usedDeliveryOption={this.state.usedDeliveryOption}\r\n                deliveryOptionChanged={this.deliveryOptionChangeHandler}\r\n              />\r\n\r\n              <h4 className=\"mb-3\">Payment Method</h4>\r\n              {/* payment option selection field */}\r\n              <PaymentOptions\r\n                paymentMethod={this.state.paymentMethod}\r\n                paymentOptionChanged={this.paymentOptionChangeHandler}\r\n              />\r\n              {/* payment section */}\r\n              <div>{chosenPaymentMethod}</div>\r\n\r\n              <hr className=\"mb-4\" />\r\n              <button\r\n                disabled={!(this.state.makeOrder && this.state.correctCardInfo)}\r\n                className=\"btn shop-btn-secondary btn-lg btn-block\"\r\n                onClick={(event) =>\r\n                  this.confirmOrderHandler(event, shoppingTotal)\r\n                }\r\n              >\r\n                Confirm Order\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCheckout.propTypes = {\r\n  productsProps: PropTypes.array.isRequired,\r\n  cartProductsProps: PropTypes.array.isRequired,\r\n  cartTotalProps: PropTypes.number.isRequired,\r\n  promoCodeProp: PropTypes.array,\r\n  usedPromoCodeProp: PropTypes.object,\r\n  deliveryOptions: PropTypes.array.isRequired,\r\n  usedCurrencyProp: PropTypes.object.isRequired,\r\n  vatProps: PropTypes.number,\r\n};\r\n\r\nCheckout.defaultProps = {\r\n  shippingPriceProp: 0,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productsProps: state.products,\r\n    cartProductsProps: state.cart,\r\n    cartTotalProps: state.cartTotal,\r\n    vatProps: state.vat,\r\n    promoCodeProp: state.promoCode,\r\n    usedPromoCodeProp: state.usedPromoCode,\r\n    deliveryOptions: state.deliveryOptions,\r\n    usedCurrencyProp: state.usedCurrency,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    confirmOrderProp: (order) => dispatch(confirmOrder(order, ownProps)),\r\n    setPromoCodeProp: (promoCode, percentage) =>\r\n      dispatch(setPromoCode(promoCode, percentage)),\r\n  };\r\n};\r\n\r\n// inject stripe prop into the component\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(injectStripe(Checkout));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}