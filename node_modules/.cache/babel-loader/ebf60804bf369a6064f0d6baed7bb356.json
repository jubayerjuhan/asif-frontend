{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"I:\\\\Node-Express\\\\juhan\\\\src\\\\views\\\\Cart.jsx\";\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { removeFromCart, clearCart, updateCartProductCount } from \"../store/actions\";\nimport CartProduct from \"../components/Cart/CartProducts\";\nimport CartProductTotals from \"../components/Cart/CartProductTotals\";\nimport OrderSuccess from \"../components/OrderSuccess\";\nimport PropTypes from \"prop-types\";\nimport { currencyToUse } from \"../Utility/currency\";\n\nvar Cart = function Cart(props) {\n  var productCountHandler = function productCountHandler(field_value, product_details) {\n    props.updateCartProductCountProp(field_value, product_details);\n  };\n\n  var cartContent = null;\n  var currencyKeys = currencyToUse(props.usedCurrencyProp);\n  var currencyValue = currencyKeys.value;\n\n  if (props.cartTotalProp > 0) {\n    var cartPriceCountArray = [];\n    var cartProducts = props.cartProductsProp.map(function (productInCart, index) {\n      // fetch product information from source based on id\n      // product information can also be stored in state\n      var productFromStore = props.productProps.find(function (product) {\n        return product.id === productInCart.id;\n      });\n      cartPriceCountArray.push({\n        price: productFromStore.quantity > 0 ? Math.round(productFromStore.price * currencyValue) : 0,\n        count: productInCart.quantity\n      });\n      return /*#__PURE__*/React.createElement(CartProduct, {\n        key: index,\n        productId: productFromStore.id,\n        productName: productFromStore.name,\n        productVendor: productFromStore.vendor,\n        productCategory: productFromStore.category,\n        productPhoto: productFromStore.img,\n        productPrice: Math.round(productFromStore.price * currencyValue),\n        productCount: productInCart.quantity,\n        productSize: productInCart.size,\n        productQuantity: productFromStore.quantity,\n        updateProductCount: function updateProductCount(event) {\n          return productCountHandler(event.target.value, productInCart);\n        },\n        removeCartProduct: function removeCartProduct() {\n          return props.removeProductFromCartProp(productInCart);\n        },\n        currency: props.usedCurrencyProp,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      });\n    });\n    var cartTotals = /*#__PURE__*/React.createElement(CartProductTotals, {\n      subtotal: cartPriceCountArray.reduce(function (acc, el) {\n        return acc + el.price * el.count;\n      }, 0),\n      vat: props.vatProp,\n      clearCart: function clearCart() {\n        return props.clearProductsFromCartProp();\n      },\n      currency: props.usedCurrencyProp,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n    cartContent = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, cartProducts, cartTotals);\n  } else if (props.cartTotalProp === 0 && props.orderSuccessProp) {\n    cartContent = /*#__PURE__*/React.createElement(OrderSuccess, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    });\n  } else {\n    cartContent = /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"shop-empty-cart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"Your cart is empty. \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/all\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Please fill it up.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container shop-container py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 shop-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, cartContent));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    productProps: state.products,\n    cartTotalProp: state.cartTotal,\n    cartProductsProp: state.cart,\n    vatProp: state.vat,\n    orderSuccessProp: state.orderSuccess,\n    usedCurrencyProp: state.usedCurrency\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    removeProductFromCartProp: function removeProductFromCartProp(productDetails) {\n      return dispatch(removeFromCart(productDetails));\n    },\n    clearProductsFromCartProp: function clearProductsFromCartProp() {\n      return dispatch(clearCart());\n    },\n    updateCartProductCountProp: function updateCartProductCountProp(value, productDetails) {\n      return dispatch(updateCartProductCount(Number(value), productDetails));\n    }\n  };\n};\n\nCart.propTypes = {\n  cartTotalProp: PropTypes.number.isRequired,\n  cartProductsProp: PropTypes.array.isRequired,\n  productProps: PropTypes.array.isRequired,\n  orderSuccessProp: PropTypes.bool.isRequired,\n  vatProp: PropTypes.number,\n  usedCurrencyProp: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"names":["React","connect","Link","removeFromCart","clearCart","updateCartProductCount","CartProduct","CartProductTotals","OrderSuccess","PropTypes","currencyToUse","Cart","props","productCountHandler","field_value","product_details","updateCartProductCountProp","cartContent","currencyKeys","usedCurrencyProp","currencyValue","value","cartTotalProp","cartPriceCountArray","cartProducts","cartProductsProp","map","productInCart","index","productFromStore","productProps","find","product","id","push","price","quantity","Math","round","count","name","vendor","category","img","size","event","target","removeProductFromCartProp","cartTotals","reduce","acc","el","vatProp","clearProductsFromCartProp","orderSuccessProp","mapStateToProps","state","products","cartTotal","cart","vat","orderSuccess","usedCurrency","mapDispatchToProps","dispatch","productDetails","Number","propTypes","number","isRequired","array","bool","object"],"sources":["I:/Node-Express/juhan/src/views/Cart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  removeFromCart,\r\n  clearCart,\r\n  updateCartProductCount,\r\n} from \"../store/actions\";\r\nimport CartProduct from \"../components/Cart/CartProducts\";\r\nimport CartProductTotals from \"../components/Cart/CartProductTotals\";\r\nimport OrderSuccess from \"../components/OrderSuccess\";\r\nimport PropTypes from \"prop-types\";\r\nimport { currencyToUse } from \"../Utility/currency\";\r\n\r\nconst Cart = (props) => {\r\n  const productCountHandler = (field_value, product_details) => {\r\n    props.updateCartProductCountProp(field_value, product_details);\r\n  };\r\n\r\n  let cartContent = null;\r\n  let currencyKeys = currencyToUse(props.usedCurrencyProp);\r\n  let currencyValue = currencyKeys.value;\r\n\r\n  if (props.cartTotalProp > 0) {\r\n    let cartPriceCountArray = [];\r\n    let cartProducts = props.cartProductsProp.map((productInCart, index) => {\r\n      // fetch product information from source based on id\r\n      // product information can also be stored in state\r\n      let productFromStore = props.productProps.find(\r\n        (product) => product.id === productInCart.id\r\n      );\r\n      cartPriceCountArray.push({\r\n        price:\r\n          productFromStore.quantity > 0\r\n            ? Math.round(productFromStore.price * currencyValue)\r\n            : 0,\r\n        count: productInCart.quantity,\r\n      });\r\n      return (\r\n        <CartProduct\r\n          key={index}\r\n          productId={productFromStore.id}\r\n          productName={productFromStore.name}\r\n          productVendor={productFromStore.vendor}\r\n          productCategory={productFromStore.category}\r\n          productPhoto={productFromStore.img}\r\n          productPrice={Math.round(productFromStore.price * currencyValue)}\r\n          productCount={productInCart.quantity}\r\n          productSize={productInCart.size}\r\n          productQuantity={productFromStore.quantity}\r\n          updateProductCount={(event) =>\r\n            productCountHandler(event.target.value, productInCart)\r\n          }\r\n          removeCartProduct={() =>\r\n            props.removeProductFromCartProp(productInCart)\r\n          }\r\n          currency={props.usedCurrencyProp}\r\n        />\r\n      );\r\n    });\r\n\r\n    let cartTotals = (\r\n      <CartProductTotals\r\n        subtotal={cartPriceCountArray.reduce(\r\n          (acc, el) => acc + el.price * el.count,\r\n          0\r\n        )}\r\n        vat={props.vatProp}\r\n        clearCart={() => props.clearProductsFromCartProp()}\r\n        currency={props.usedCurrencyProp}\r\n      />\r\n    );\r\n\r\n    cartContent = (\r\n      <React.Fragment>\r\n        {cartProducts}\r\n        {cartTotals}\r\n      </React.Fragment>\r\n    );\r\n  } else if (props.cartTotalProp === 0 && props.orderSuccessProp) {\r\n    cartContent = <OrderSuccess />;\r\n  } else {\r\n    cartContent = (\r\n      <h5 className={\"shop-empty-cart\"}>\r\n        Your cart is empty. <Link to={\"/all\"}>Please fill it up.</Link>\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container shop-container py-4\">\r\n      <div className={\"p-4 shop-div\"}>{cartContent}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productProps: state.products,\r\n    cartTotalProp: state.cartTotal,\r\n    cartProductsProp: state.cart,\r\n    vatProp: state.vat,\r\n    orderSuccessProp: state.orderSuccess,\r\n    usedCurrencyProp: state.usedCurrency,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeProductFromCartProp: (productDetails) =>\r\n      dispatch(removeFromCart(productDetails)),\r\n    clearProductsFromCartProp: () => dispatch(clearCart()),\r\n    updateCartProductCountProp: (value, productDetails) =>\r\n      dispatch(updateCartProductCount(Number(value), productDetails)),\r\n  };\r\n};\r\n\r\nCart.propTypes = {\r\n  cartTotalProp: PropTypes.number.isRequired,\r\n  cartProductsProp: PropTypes.array.isRequired,\r\n  productProps: PropTypes.array.isRequired,\r\n  orderSuccessProp: PropTypes.bool.isRequired,\r\n  vatProp: PropTypes.number,\r\n  usedCurrencyProp: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}